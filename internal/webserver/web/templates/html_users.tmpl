{{ define "users" }}
{{ template "header" . }}
<div class="row">
    <div class="col">
        <div id="container" class="card" style="width: 80%">
            <div class="card-body">
                <h3 class="card-title">Users</h3>
                <div class="table-responsive">
                    <table class="table table-dark">
                        <thead>
                            <tr>
                                <th scope="col">Name</th>
                                <th scope="col">Email</th>
                                <th scope="col">Group</th>
            			<th scope="col">Last online</th>
            			<th scope="col">Uploads</th>
            			<th scope="col">Permissions</th>
                                <th scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
{{ range .Users }}
                            <tr id="row-{{ .User.Id }}">
                                <td scope="col" id="{{ .User.Id }}">{{ .User.Name }}</td>
                                <td scope="col">{{ .User.Email }}</td>
                                <td scope="col">{{ .User.GetReadableUserLevel }}</td>
            			<td scope="col">{{ .User.GetReadableDate }}</td>
                                <td scope="col">{{ .UploadCount }}</td>
            			<td scope="col">
            			
		<i id="perm_replace_{{ .User.Id }}" class="bi bi-recycle {{if not .User.HasPermissionReplace}}perm-notgranted{{else}}perm-granted{{end}} {{if eq .User.UserLevel 0}}perm-nochange{{end}}" title="Replace own uploads" onclick='changeUserPermission("{{ .User.Id }}","PERM_REPLACE", "perm_replace_{{ .User.Id }}");'></i>
		
		<i id="perm_list_{{ .User.Id }}" class="bi bi-eye {{if not .User.HasPermissionListOtherUploads}}perm-notgranted{{else}}perm-granted{{end}} {{if eq .User.UserLevel 0}}perm-nochange{{end}}" title="List other uploads" onclick='changeUserPermission("{{ .User.Id }}","PERM_LIST", "perm_list_{{ .User.Id }}");'></i>
		
		<i id="perm_edit_{{ .User.Id }}" class="bi bi-pencil {{if not .User.HasPermissionEditOtherUploads}}perm-notgranted{{else}}perm-granted{{end}} {{if eq .User.UserLevel 0}}perm-nochange{{end}}" title="Edit other uploads" onclick='changeUserPermission("{{ .User.Id }}","PERM_EDIT", "perm_edit_{{ .User.Id }}");'></i>
		
		<i id="perm_replace_other_{{ .User.Id }}" class="bi bi-arrow-left-right {{if not .User.HasPermissionReplaceOtherUploads}}perm-notgranted{{else}}perm-granted{{end}} {{if eq .User.UserLevel 0}}perm-nochange{{end}}" title="Replace other uploads" onclick='changeUserPermission("{{ .User.Id }}","PERM_REPLACE_OTHER", "perm_replace_other_{{ .User.Id }}");'></i>
		
		<i id="perm_delete_{{ .User.Id }}" class="bi bi-trash3 {{if not .User.HasPermissionDeleteOtherUploads}}perm-notgranted{{else}}perm-granted{{end}} {{if eq .User.UserLevel 0}}perm-nochange{{end}}" title="Delete other uploads" onclick='changeUserPermission("{{ .User.Id }}","PERM_DELETE", "perm_delete_{{ .User.Id }}");'></i>
		
		<i id="perm_logs_{{ .User.Id }}" class="bi bi-card-list {{if not .User.HasPermissionManageLogs}}perm-notgranted{{else}}perm-granted{{end}} {{if eq .User.UserLevel 0}}perm-nochange{{end}}" title="Manage system logs" onclick='changeUserPermission("{{ .User.Id }}","PERM_LOGS", "perm_logs_{{ .User.Id }}");'></i>
		
		<i id="perm_api_{{ .User.Id }}" class="bi bi-sliders2 {{if not .User.HasPermissionManageApi}}perm-notgranted{{else}}perm-granted{{end}} {{if eq .User.UserLevel 0}}perm-nochange{{end}}" title="Manage API keys" onclick='changeUserPermission("{{ .User.Id }}","PERM_API", "perm_api_{{ .User.Id }}");'></i>
		
		<i id="perm_users_{{ .User.Id }}" class="bi bi-people {{if not .User.HasPermissionManageUsers}}perm-notgranted{{else}}perm-granted{{end}} {{if eq .User.UserLevel 0}}perm-nochange{{end}}" title="Manage users" onclick='changeUserPermission("{{ .User.Id }}","PERM_USERS", "perm_users_{{ .User.Id }}");'></i>
            			</td>
                                <td scope="col"><button type="button" data-clipboard-text="{{ .User.Id }}"  onclick="showToast()" title="Copy API Key" class="copyurl btn btn-outline-light btn-sm"><i class="bi bi-copy"></i></button> <button id="delete-{{ .User.Id }}" type="button" class="btn btn-outline-danger btn-sm" {{if eq .User.UserLevel 0}}disabled{{end}} onclick="showDeleteModal('{{ .User.Id }}', '{{ .User.Email }}')" title="Delete"><i class="bi bi-trash3"></i></button></td>
                            </tr>
{{ end }}
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
	<div id="toastnotification" class="toastnotification">API key copied to clipboard</div>
	<div class="modal" tabindex="-1" id="deleteModal">
	  <div class="modal-dialog gokapi-dialog">
	    <div class="modal-content gokapi-dialog">
	      <div class="modal-header">
		<h5 class="modal-title">Delete User</h5>
		<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
	      </div>
	      <div class="modal-body">
		<p>Are you sure you want to delete user <span id="deleteModalBody" class="fw-bold"></span>?
		This action cannot be undone.</p>
		<div class="form-check form-check-inline">
		  <input class="form-check-input" type="checkbox"  id="checkboxDelete" value="" id="flexCheckDefault">
		  <label class="form-check-label" for="flexCheckDefault">
		    Permanently delete all files uploaded by this user.
		  </label>
		</div>
		</div>
	      <div class="modal-footer">
		<button type="button" class="btn btn-outline-light" data-bs-dismiss="modal">Cancel</button>
		<button type="button" id="buttonDelete" class="btn btn-danger">Delete User</button>
	      </div>
	    </div>
	  </div>
	</div>
    </div>
</div>
<script src="./js/min/admin.min.{{ template "js_admin_version"}}.js"></script>
<script>
	document.querySelectorAll(".apiname").forEach(function(node) {
	    node.onclick = function() {
		if (this.classList.contains("isBeingEdited"))
		    return;
		this.classList.add("isBeingEdited");
		var val = this.innerHTML;
		var input = document.createElement("input");
		input.size = 5;
		input.value = val;
		let row = this;
		let allowEdit = true;
		let submitEntry = function() {
		    if (!allowEdit)
			return;
		    allowEdit = false;
		    var val = input.value;
		    input.parentNode.innerHTML = val;
		    let xmlhttp = new XMLHttpRequest();
		    xmlhttp.open("GET", "./api/auth/friendlyname");
		    xmlhttp.setRequestHeader("apiKeyToModify", row.User.Id);
		    xmlhttp.setRequestHeader("friendlyName", val);
		    xmlhttp.setRequestHeader("apikey", systemKey);
		    xmlhttp.send();
		    row.classList.remove("isBeingEdited");

		    //xmlhttp.onreadystatechange = (e) => {
		    //}
		}
		input.onblur = submitEntry;
		input.addEventListener("keyup", function(event) {
		    //Enter
		    if (event.keyCode === 13) {
		        event.preventDefault();
		        submitEntry();
		    }
		});
		this.innerHTML = "";
		this.appendChild(input);
		input.focus();
	    }
	});
	var systemKey = "{{.SystemKey}}";
</script>
{{ template "footer" true }}
{{ end }}
